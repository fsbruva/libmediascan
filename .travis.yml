language: c
os: linux
dist: xenial
arch:
  - ppc64le
  - amd64
  - s390x
  - arm64
env: Ubuntu=Xenial

compiler:
  - clang
  - gcc

addons:
  apt:
    update: true
    packages:
      - nasm
      - rsync
      - zlib1g-dev
      - libmodule-install-perl
      - cpanminus
# This is added only because the latest version of libexif needs it
      - autopoint
      - gettext

  homebrew:
    update: true
    packages:
      - nasm
      - rsync
# This is added only because the latest version of libexif needs it
      - gettext
      - intltool

git:
  depth: 1

install: skip

before_script: autoreconf -fi && bash -o errexit buildme.sh -j 4
script: cd deplibs && bash -o errexit buildme-latest.sh -j 4


jobs:
  include:
  # We can't do matrix expansion across multiple OS's, because only linux has the various
  # versions of Perl built and available. Instead, we add all the various Perl/compiler
  # combinations as explicit include jobs.

 #######################################################
  #         macOS and xcode version coverage tests      #
  #######################################################
# The macOS build images do not use perlbrew, so must masquerade as C++
# projects to enable build using stock Perl. Matrix "env:" needs to be
# overridden so that matrix expansion doesn't result in CC=gcc.

# Matrix hack: Declare same stage multiple times...
    - &macOS_alias
      arch: amd64
      os: osx
      osx_image: xcode7.3
      language: cpp
      compiler: clang
      perl: "5.18"   # This label may not reflect reality
      env: macOS_ver=10.11
      before_install: |
        if [ "$TRAVIS_OS_NAME" == "osx" ]; then
          brew link --force gettext
        fi

    # Subsequent instances use alias to test different versions
    - <<: *macOS_alias
      osx_image: xcode8
      env: macOS_ver=10.11
    - <<: *macOS_alias
      osx_image: xcode8.3
      env: macOS_ver=10.12
    - <<: *macOS_alias
      osx_image: xcode9
      env: macOS_ver=10.12
    - <<: *macOS_alias
      osx_image: xcode9.1
      env: macOS_ver=10.12
    - <<: *macOS_alias
      osx_image: xcode9.2
      env: macOS_ver=10.12
    - <<: *macOS_alias
      osx_image: xcode9.3
      env: macOS_ver=10.13
    - <<: *macOS_alias
      osx_image: xcode9.4
      env: macOS_ver=10.13
    - <<: *macOS_alias
      osx_image: xcode10
      env: macOS_ver=10.13
    - <<: *macOS_alias
      osx_image: xcode10.1
      env: macOS_ver=10.13
    - <<: *macOS_alias
      osx_image: xcode10.2
      env: macOS_ver=10.14
    - <<: *macOS_alias
      osx_image: xcode10.3
      env: macOS_ver=10.14.4
    - <<: *macOS_alias
      osx_image: xcode11
      env: macOS_ver=10.14
    - <<: *macOS_alias
      osx_image: xcode11.1
      env: macOS_ver=10.14
    - <<: *macOS_alias
      osx_image: xcode11.2
      env: macOS_ver=10.14

  #######################################################
  #         Bionic (18.04 LTS) clang coverage tests     #
  #######################################################

    - &bionic_clang39_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-3.9
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-3.9 && CXX=clang++-3.9

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang39_alias
      arch: ppc64le
    - <<: *bionic_clang39_alias
      arch: arm64
    - <<: *bionic_clang39_alias
      arch: s390x

    # Subsequent instances use alias to test different versions of clang
    - &bionic_clang40_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-4.0
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-4.0 && CXX=clang++-4.0

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang40_alias
      arch: ppc64le
    - <<: *bionic_clang40_alias
      arch: arm64
    - <<: *bionic_clang40_alias
      arch: s390x

    - &bionic_clang50_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-5.0
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-5.0 && CXX=clang++-5.0

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang50_alias
      arch: ppc64le
    - <<: *bionic_clang50_alias
      arch: arm64
    - <<: *bionic_clang50_alias
      arch: s390x

    - &bionic_clang6_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-6.0
          packages:
            - clang-6.0
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-6.0 && CXX=clang++-6.0

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang6_alias
      arch: ppc64le
    - <<: *bionic_clang6_alias
      arch: arm64
    - <<: *bionic_clang6_alias

    - &bionic_clang7_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-7
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-7 && CXX=clang++-7

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang7_alias
      arch: ppc64le
    - <<: *bionic_clang7_alias
      arch: arm64
    - <<: *bionic_clang7_alias

    - &bionic_clang8_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-8
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-8 && CXX=clang++-8

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang8_alias
      arch: ppc64le
    - <<: *bionic_clang8_alias
      arch: arm64
    - <<: *bionic_clang8_alias

    - &bionic_clang9_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c

      addons:
        apt:
          packages:
            - clang-9
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=clang-9 && CXX=clang++-9

    # Subsequent instances use alias to test different architectures
    - <<: *bionic_clang9_alias
      arch: ppc64le
    - <<: *bionic_clang9_alias
      arch: arm64
    - <<: *bionic_clang9_alias

  #######################################################
  #         Xenial (16.04 LTS) gcc coverage tests      #
  #######################################################

    - &xenial_gcc47_alias
      arch: amd64
      os: linux
      dist: xenial
      language: c
      compiler: gcc

      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.7
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Xenial && CC=gcc-4.7 && CXX=g++-4.7

    - <<: *xenial_gcc47_alias
      arch: ppc64le
    - <<: *xenial_gcc47_alias
      arch: arm64
    - <<: *xenial_gcc47_alias
      arch: s390x

    - &xenial_gcc49_alias
      arch: amd64
      os: linux
      dist: xenial
      language: c
      compiler: gcc

      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Xenial && CC=gcc-4.9 && CXX=g++-4.9

    - <<: *xenial_gcc49_alias
      arch: ppc64le
    - <<: *xenial_gcc49_alias
      arch: arm64
    - <<: *xenial_gcc49_alias
      arch: s390x

  #######################################################
  #         Bionic (18.04 LTS) gcc coverage tests     #
  #######################################################

    - &bionic_gcc5_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c
      compiler: gcc

      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=gcc-5 && CXX=g++-5

    - <<: *bionic_gcc5_alias
      arch: ppc64le
    - <<: *bionic_gcc5_alias
      arch: arm64
    - <<: *bionic_gcc5_alias
      arch: s390x

    - &bionic_gcc6_alias
      arch: amd64
      os: linux
      dist: bionic
      language: c
      compiler: gcc

      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - nasm
            - rsync
            - zlib1g-dev
            - libmodule-install-perl
            - cpanminus
            - autopoint
            - gettext
      env: Ubuntu=Bionic && CC=gcc-6 && CXX=g++-6

    - <<: *bionic_gcc6_alias
      arch: ppc64le
    - <<: *bionic_gcc6_alias
      arch: arm64
    - <<: *bionic_gcc6_alias
      arch: s390x

  #######################################################
  #         Linux Perl version coverage tests           #
  #######################################################

  # Trusty's default Perl is 5.22 (covered earlier), so we don't need it here.
  # Matrix hack: Declare same stage multiple times...
    - &trusty_amd64_alias
      arch: amd64
      dist: trusty
      language: perl
      compiler: gcc
      perl: "5.24"
      env: Ubuntu=Trusty

    # Subsequent instances use alias to test different versions
    - <<: *trusty_amd64_alias
      perl: "5.24"
      compiler: clang
    - <<: *trusty_amd64_alias
      perl: "5.24-shrplib"
    - <<: *trusty_amd64_alias
      perl: "5.24-shrplib"
      compiler: clang
    - <<: *trusty_amd64_alias
      perl: "5.26"
    - <<: *trusty_amd64_alias
      perl: "5.26"
      compiler: clang
    - <<: *trusty_amd64_alias
      perl: "5.26-shrplib"
    - <<: *trusty_amd64_alias
      perl: "5.26-shrplib"
      compiler: clang
      perl: "5.28"
    - <<: *trusty_amd64_alias
      perl: "5.28"
      compiler: clang
    - <<: *trusty_amd64_alias
      perl: "5.28-shrplib"
    - <<: *trusty_amd64_alias
      perl: "5.28-shrplib"
      compiler: clang
      perl: "5.30"
    - <<: *trusty_amd64_alias
      perl: "5.30"
      compiler: clang
    - <<: *trusty_amd64_alias
      perl: "5.30-shrplib"
    - <<: *trusty_amd64_alias
      perl: "5.30-shrplib"
      compiler: clang


# Xenial's default Perl is 5.24, (covered above) so does not need to be covered here
# Matrix hack: Declare same stage multiple times...
    - &xenial_amd64_alias
      arch: amd64
      dist: xenial
      language: perl
      perl: "5.22"
      compiler: gcc
      env: Ubuntu=Xenial

    # Subsequent instances use alias to test different versions
    - <<: *xenial_amd64_alias
      perl: "5.22"
      compiler: clang
    - <<: *xenial_amd64_alias
      perl: "5.24-shrplib"
    - <<: *xenial_amd64_alias
      perl: "5.24-shrplib"
      compiler: clang
    - <<: *xenial_amd64_alias
      perl: "5.26"
    - <<: *xenial_amd64_alias
      perl: "5.26"
      compiler: clang
    - <<: *xenial_amd64_alias
      perl: "5.26-shrplib"
    - <<: *xenial_amd64_alias
      perl: "5.26-shrplib"
      compiler: clang
      perl: "5.28"
    - <<: *xenial_amd64_alias
      perl: "5.28"
      compiler: clang
    - <<: *xenial_amd64_alias
      perl: "5.28-shrplib"
    - <<: *xenial_amd64_alias
      perl: "5.28-shrplib"
      compiler: clang
      perl: "5.30"
    - <<: *xenial_amd64_alias
      perl: "5.30"
      compiler: clang
    - <<: *xenial_amd64_alias
      perl: "5.30-shrplib"
    - <<: *xenial_amd64_alias
      perl: "5.30-shrplib"
      compiler: clang

# Bionic's default Perl is 5.26, so we don't need to cover it here.
# Matrix hack: Declare same stage multiple times...
    - &bionic_amd64_alias
      dist: bionic
      arch: amd64
      language: perl
      perl: "5.22"
      compiler: gcc
      env: Ubuntu=Bionic

    # Subsequent instances use alias to test different versions
    - <<: *bionic_amd64_alias
      perl: "5.22"
      compiler: clang
    - <<: *bionic_amd64_alias
      perl: "5.24"
    - <<: *bionic_amd64_alias
      perl: "5.24"
      compiler: clang
    - <<: *bionic_amd64_alias
      perl: "5.24-shrplib"
    - <<: *bionic_amd64_alias
      perl: "5.24-shrplib"
      compiler: clang
    - <<: *bionic_amd64_alias
      perl: "5.26-shrplib"
    - <<: *bionic_amd64_alias
      perl: "5.26-shrplib"
      compiler: clang
      perl: "5.28"
    - <<: *bionic_amd64_alias
      perl: "5.28"
      compiler: clang
    - <<: *bionic_amd64_alias
      perl: "5.28-shrplib"
    - <<: *bionic_amd64_alias
      perl: "5.28-shrplib"
      compiler: clang
      perl: "5.30"
    - <<: *bionic_amd64_alias
      perl: "5.30"
      compiler: clang
    - <<: *bionic_amd64_alias
      perl: "5.30-shrplib"
    - <<: *bionic_amd64_alias
      perl: "5.30-shrplib"
      compiler: clang
